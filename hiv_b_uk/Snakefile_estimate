import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on bioevo (change shakemake activation below if you are not Anna ;) :
# source ~/.bashrc && conda activate snakemake && module load apptainer && cd /pasteur/zeus/projets/p01/Evolbioinfo/users/azhukova/projects/bdei/simulations
# snakemake --snakefile Snakefile_estimate --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p bioevo --qos={params.qos}  -A bioevo -J {params.name}" --jobs 300


localrules: all

os.makedirs('logs', exist_ok=True)

data_dir = os.path.abspath(config.get("data", 'data'))
n = int(config.get("n", 10))
REPETITIONS = list(range(n))

rule all:
    input:
        expand(os.path.join(data_dir, 'forest.{min_date}_{max_date}.{i}.p={p}.est'), i=REPETITIONS, p=[0.4, 0.5, 0.6], min_date=[2012], max_date=[2015]),
        expand(os.path.join(data_dir, 'forest.{min_date}_{max_date}.{i}.cherry_test'), i=REPETITIONS, min_date=[2012], max_date=[2015])


rule estimate_params_p_fixed:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(data_dir, '{forest}.nwk')
    output:
        est = os.path.join(data_dir, '{forest}.p={p}.est')
    params:
        mem = 2000,
        name = 'est_p',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1"
    shell:
        """
        # bdpn_infer --p {wildcards.p}  --nwk {input.nwk} --log {output.est} --upper_bounds 12 1 365 0.9 0.9 --lower_bounds 0.1 0.05 0.5 0.1 0.001 --ci
        bdpn_infer --p {wildcards.p}  --nwk {input.nwk} --log {output.est} --ci
        """

rule estimate_params_psi_fixed:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(data_dir, '{forest}.nwk')
    output:
        est = os.path.join(data_dir, '{forest}.psi={psi}.est')
    params:
        mem = 2000,
        name = 'est_p',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1"
    shell:
        """
        # bdpn_infer --psi {wildcards.psi}  --nwk {input.nwk} --log {output.est} --upper_bounds 12 1 365 0.9 0.9 --lower_bounds 0.1 0.05 0.5 0.1 0.001 --ci
        bdpn_infer --psi {wildcards.psi}  --nwk {input.nwk} --log {output.est} --ci
        """


rule cherry_test:
    '''
    PN-test on a given tree.
    '''
    input:
        nwk = os.path.join(data_dir, '{forest}.nwk')
    output:
        log = os.path.join(data_dir, '{forest}.cherry_test')
    params:
        mem=2000,
        name='pn_test',
        qos='fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.2"
    shell:
        """
        pn_test --nwk {input.nwk} --log {output.log} --block_size 100
        """