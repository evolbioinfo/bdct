import os

# To run locally:
# snakemake --snakefile Snakefile_data --keep-going --cores 10 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To visualise the pipeline:
# module load graphviz
# snakemake --snakefile Snakefile_data --dag | dot -Tsvg > pipeline_data.svg

localrules: all

data_dir = os.path.abspath(config.get("data", 'data'))
N = 10

rule all:
    input:
        expand(os.path.join(data_dir, 'forest.{min_date}_{max_date}.{i}.nwk'), i=range(N), min_date=[2012], max_date=[2015])
    shell:
        """
        snakemake --snakefile Snakefile_estimate --keep-going --cores 12 --config n={N} --unlock 2> /dev/null
        snakemake --snakefile Snakefile_estimate --keep-going --cores 12 --config n={N} 
        """


rule tree_size:
    '''
    Calculates tree size.
    '''
    input:
        tree = os.path.join(data_dir, '{tree}.nwk'),
    output:
        length = os.path.join(data_dir, '{tree}.ntips'),
    singularity:
        "docker://evolbioinfo/gotree:v0.3.0b"
    params:
        mem = 2000,
        name = 'tree_size',
        qos = 'fast'
    threads: 1
    shell:
        """
        gotree stats -i {input.tree} | tail -n 1 | awk '{{print $3}}' > {output.length}
        """

rule extract_dates_lsd2:
    '''
    Reformats metadata into date file readable by LSD.
    '''
    input:
        tab = os.path.join(data_dir, 'dates.tab'),
    output:
        tab = os.path.join(data_dir, 'lsd2.{i}.dates'),
    params:
        mem = 1000,
        name = 'lsd2_dates',
        date_col = 'sampledate_my'
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6richer"
    shell:
        """
        python3 py/extract_dates_lsd.py --data {input.tab} --dates {output.tab} \
        --date_col "{params.date_col}"
        """

rule date_lsd2:
    '''
    Dates a given tree.
    '''
    input:
        tree = os.path.join(data_dir, 'rooted_raxml.nwk'),
        dates = os.path.join(data_dir, 'lsd2.{i}.dates'),
    output:
        tree = os.path.join(data_dir, 'timetree.{i}.nexus'),
        log = os.path.join(data_dir, 'timetree.{i}.log')
    threads: 1
    singularity: "docker://evolbioinfo/lsd2:v2.4.1"
    params:
        mem = 4000,
        name = 'lsd2_{i}',
        wd = os.path.join(data_dir, 'timetree.{i}.lsd2.wd'),
        qos = 'fast'
    shell:
        """
        lsd2 -i {input.tree} -d {input.dates} -e 3 -s 3102 -o {params.wd} -u 0.0027397260273972603 -l 0 -m 20000

        mv "{params.wd}.date.nexus" "{output.tree}"
        mv "{params.wd}" "{output.log}"
        rm "{params.wd}.nwk"
        rm -rf "{params.wd}*"
        """

rule extract_forest:
    '''
    Extract a forest of trees within a date range.
    '''
    input:
        tree = os.path.join(data_dir, 'timetree.{i}.nexus'),
    output:
        forest = os.path.join(data_dir, 'forest.{min_date}_{max_date}.{i}.nwk'),
    threads: 1
    singularity: "docker://evolbioinfo/pastml:v1.9.34"
    params:
        mem = 4000,
        name = 'cut_{i}',
        qos = 'fast'
    shell:
        """
        python3 py/cut_tree.py --tree {input.tree} --forest {output.forest} \
        --min_year {wildcards.min_date} --max_year {wildcards.max_date}
        """
