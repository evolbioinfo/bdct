import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on bioevo (change shakemake activation below if you are not Anna ;) :
# source ~/.bashrc && conda activate snakemake && module load apptainer && cd /pasteur/zeus/projets/p01/Evolbioinfo/users/azhukova/projects/bdct/simulations_ct
# snakemake --snakefile Snakefile_estimate --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p common --qos={params.qos} -J {params.name}" --jobs 600
snakemake_settings = "  --keep-going --cores 1 --jobs 500 --rerun-incomplete --cluster  \"sbatch -c {threads} -o {folder}/logs/{params.name}.log -e {folder}/logs/{params.name}.log --mem {params.mem} -p common --qos={params.qos}  -A bioevo -J {params.name}\"  --use-singularity --singularity-prefix \"$HOME/.singularity\" --singularity-args \"-B /pasteur\" "


localrules: all

os.makedirs('logs', exist_ok=True)


folder = config.get("folder", '.')
num = int(config.get("num", 100))
REPETITIONS = list(range(num))
ci = "--ci"
# ci = ""
os.makedirs(os.path.join(folder, 'logs'), exist_ok=True)

M = int(config.get('max', 1000))

rule all:
    input:
        expand(os.path.join(folder, 'BDCT{n}', 'estimates.tab'), n=[0, 1, 2, M]),


rule estimate_params_bd:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(folder, '{model}', '{type}.{i}.nwk'),
        log = os.path.join(folder, '{model}', '{type}.{i}.log'),
    output:
        est = os.path.join(folder, '{model}', '{type,tree|forest}.{i}.est_bd'),
    params:
        mem = 2000,
        name = 'bd{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.23"
    shell:
        """
        p=`tail -n 1 {input.log} | awk -F',' '{{ print $3 }}'`
        bd_infer --p $p  --nwk {input.nwk} --log {output.est} {ci}
        """


rule estimate_params_bdct:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(folder, '{model}', '{type}.{i}.nwk'),
        log = os.path.join(folder, '{model}', '{type}.{i}.log'),
    output:
        est = os.path.join(folder, '{model}', '{type,tree|forest}.{i}.est_bdct'),
    params:
        mem = 2000,
        name = 'bd{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.23"
    shell:
        """
        p=`tail -n 1 {input.log} | awk -F',' '{{ print $3 }}'`
        bdct_infer --p $p  --nwk {input.nwk} --log {output.est} {ci}
        """



rule combine_estimates:
    '''
    Combine estimates.
    '''
    input:
        log = expand(os.path.join(folder, '{{model}}', 'tree.{i}.log'), i=REPETITIONS),
        est_bd = expand(os.path.join(folder, '{{model}}', 'tree.{i}.est_bd'), i=REPETITIONS),
        est_bdct = expand(os.path.join(folder, '{{model}}', 'tree.{i}.est_bdct'), i=REPETITIONS)
    output:
        tab = os.path.join(folder, '{model}', 'estimates.tab'),
    params:
        mem = 2000,
        name = 'estimates',
        qos = 'fast',
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6richer.2"
    shell:
        """
        python3 py/summary_table.py --real {input.log} \
        --estimates_bd {input.est_bd} \
        --estimates_bdct {input.est_bdct} 
        --tab {output.tab}
        """