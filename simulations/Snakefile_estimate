import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on bioevo (change shakemake activation below if you are not Anna ;) :
# source ~/.bashrc && conda activate snakemake && module load apptainer && cd /pasteur/zeus/projets/p01/Evolbioinfo/users/azhukova/projects/bdei/simulations
# snakemake --snakefile Snakefile_estimate --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p common --qos={params.qos}  -A bioevo -J {params.name}" --jobs 300


localrules: all

os.makedirs('logs', exist_ok=True)

folder = os.path.abspath(config.get("folder", '.'))
sim_folder = os.path.abspath(config.get("sf", os.path.join(folder, 'trees')))
n = int(config.get("n", 100))
REPETITIONS = list(range(n))

rule all:
    input:
        expand(os.path.join(sim_folder, '{model}', 'tree.{i}.{p}.est_{estimator}'), i=REPETITIONS, p=['p', 'psi'],
            model=['BDPN', 'BD'], estimator=['bd', 'bdpn'])
    shell:
        """
        snakemake --snakefile Snakefile_viz --keep-going --cores 2 --config n={n} sf={sim_folder} --unlock 2> /dev/null
        snakemake --snakefile Snakefile_viz --keep-going --cores 2 --config n={n} sf={sim_folder}
        """


rule estimate_params_p_fixed:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{model}', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{model}', 'tree.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{model}', 'tree.{i}.p.est_bdpn'),
    params:
        mem = 2000,
        name = 'est_p_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        p=`tail -n 1 {input.log} | awk -F',' '{{ print $3 }}'`
        rt=`tail -n 1 {input.log} | awk -F',' '{{ print $5 }}'`
        psip=`echo "print(1/${{rt}})" | python3`
        cat {input.log}

        bdpn_infer --p $p  --nwk {input.nwk} --log {output.est} --ci
        """

rule estimate_params_p_fixed_bd:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{model}', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{model}', 'tree.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{model}', 'tree.{i}.p.est_bd'),
    params:
        mem = 2000,
        name = 'est_p_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        p=`tail -n 1 {input.log} | awk -F',' '{{ print $3 }}'`
        cat {input.log}

        bd_infer --p $p  --nwk {input.nwk} --log {output.est} --ci
        """

rule estimate_params_psi_fixed:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{model}', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{model}', 'tree.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{model}', 'tree.{i}.psi.est_bdpn'),
    params:
        mem = 2000,
        name = 'est_psi_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        it=`tail -n 1 {input.log} | awk -F',' '{{ print $2 }}'`
        psi=`echo "print(1/${{it}})" | python3`
        rt=`tail -n 1 {input.log} | awk -F',' '{{ print $5 }}'`
        psip=`echo "print(1/${{rt}})" | python3`
        cat {input.log}

        bdpn_infer --psi ${{psi}}  --nwk {input.nwk} --log {output.est} --ci 
        """


rule estimate_params_psi_fixed_bd:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{model}', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{model}', 'tree.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{model}', 'tree.{i}.psi.est_bd'),
    params:
        mem = 2000,
        name = 'est_psi_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        it=`tail -n 1 {input.log} | awk -F',' '{{ print $2 }}'`
        psi=`echo "print(1/${{it}})" | python3`
        cat {input.log}

        bd_infer --psi ${{psi}}  --nwk {input.nwk} --log {output.est} --ci 
        """

rule estimate_params_la_fixed:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{model}', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{model}', 'tree.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{model}', 'tree.{i}.la.est_bdpn'),
    params:
        mem = 2000,
        name = 'est_la_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        r=`tail -n 1 {input.log} | awk -F',' '{{ print $1 }}'`
        it=`tail -n 1 {input.log} | awk -F',' '{{ print $2 }}'`
        la=`echo "print($r/${{it}})" | python3`
        rt=`tail -n 1 {input.log} | awk -F',' '{{ print $5 }}'`
        psip=`echo "print(1/${{rt}})" | python3`
        cat {input.log}

        bdpn_infer --la ${{la}} --nwk {input.nwk} --log {output.est}  --ci
        """

rule estimate_params_la_fixed_bd:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(sim_folder, '{model}', 'tree.{i}.nwk'),
        log = os.path.join(sim_folder, '{model}', 'tree.{i}.log'),
    output:
        est = os.path.join(sim_folder, '{model}', 'tree.{i}.la.est_bd'),
    params:
        mem = 2000,
        name = 'est_la_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        r=`tail -n 1 {input.log} | awk -F',' '{{ print $1 }}'`
        it=`tail -n 1 {input.log} | awk -F',' '{{ print $2 }}'`
        la=`echo "print($r/${{it}})" | python3`
        cat {input.log}

        bd_infer --la ${{la}} --nwk {input.nwk} --log {output.est}  --ci
        """
