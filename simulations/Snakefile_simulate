import os

# To run locally:
# snakemake --snakefile Snakefile_simulate --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"


localrules: all

folder = os.path.abspath(config.get("folder", '.'))
sim_folder = os.path.join(folder, 'trees')
n = int(config.get("n", 100))
REPETITIONS = list(range(n))

rule all:
    input:
        expand(os.path.join(sim_folder, 'BDPN', 'tree.{i}.nwk'), i=REPETITIONS)
    shell:
        """
        snakemake --snakefile Snakefile_estimate --keep-going --cores 12 --config n={n} --unlock 2> /dev/null
        snakemake --snakefile Snakefile_estimate --keep-going --cores 12 --config n={n}
        """


rule simulate_bdpn:
    '''
    Simulate a BDPN tree.
    '''
    output:
        log = os.path.join(sim_folder, 'BDPN', 'tree.{i}.log'),
        nwk = os.path.join(sim_folder, 'BDPN', 'tree.{i}.nwk')
    params:
        mem = 2000,
        name = 'simulate_{i}',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/treesimulator:v0.1.2"
    shell:
        """
        while [ ! -f {output.nwk} ]
        do
            timeout 1m python3 py/tree_generator.py --min_tips 5000 --max_tips 10000 --nwk {output.nwk} --log {output.log} || echo 'The tree took too long, restarting!'
        done
        """
