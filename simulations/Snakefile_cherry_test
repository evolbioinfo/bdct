import os

# To run locally:
# snakemake --snakefile Snakefile_cherry_test --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"


localrules: all

folder = os.path.abspath(config.get("folder", '.'))
sim_folder = os.path.abspath(config.get("sf", os.path.join(folder, 'medium')))
n = int(config.get("n", 100))
REPETITIONS = list(range(n))

m, M = int(config.get('min', 500)), int(config.get('max', 1000))
# m, M = 50, 100 # small_trees
# m, M = 500, 1000 # trees
# m, M = 5000, 10000 # large_trees

rule all:
    input:
        os.path.join(sim_folder, 'cherry_tests.tab'),


rule cherry_test:
    '''
    PN-test on a given tree.
    '''
    input:
        nwk=os.path.join(sim_folder,'{model}','tree.{i}.nwk')
    output:
        log=os.path.join(sim_folder,'{model}','tree.{i}.cherry_test'),
    params:
        mem=2000,
        name='cherry_test_{i}',
        qos='fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdpn:v0.1.1"
    shell:
        """
        pn_test --nwk {input.nwk} --log {output.log}
        """


rule combine:
    '''
    Combine results.
    '''
    input:
        log = expand(os.path.join(sim_folder,'{model}','tree.{i}.cherry_test'), i=REPETITIONS,
            model=['BD', 'BDPN', 'BDEI', 'BDEIPN', 'BDSS', 'BDSSPN'])
    output:
        tab = os.path.join(sim_folder, 'cherry_tests.tab'),
    params:
        mem = 2000,
        name = 'combine',
        qos = 'fast',
    threads: 1
    singularity: "docker://evolbioinfo/python-evol:v3.6richer.1"
    shell:
        """
        python3 py/summary_table_cherries.py --logs {input.log} --tab {output.tab}
        """