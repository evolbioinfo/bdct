import os

# To run locally:
# snakemake --snakefile Snakefile_estimate --keep-going --cores 7 --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To run on maestro :
# source ~/.bashrc && conda activate snakemake && module load apptainer && cd /pasteur/zeus/projets/p01/Evolbioinfo/users/azhukova/projects/bdct/hiv_zurich
# snakemake --snakefile Snakefile_estimate --keep-going --cores 1 --use-singularity --singularity-prefix $HOME/.singularity --singularity-args "-B /pasteur" --cluster "sbatch -c {threads} -o logs/{params.name}.log -e logs/{params.name}.log --mem {params.mem} -p common --qos={params.qos}  -A bioevo -J {params.name}" --jobs 10


localrules: all

os.makedirs('logs', exist_ok=True)

data_dir = os.path.abspath(config.get("data", '.'))

rule all:
    input:
        expand(os.path.join(data_dir, 'Zurich.p={p}.est_{model}'), p=[0.25], model=['bd', 'bdct']),
        expand(os.path.join(data_dir, 'Zurich.p={p}.lk_{model}'), p=[0.25], model=['bd', 'bdct']),
        os.path.join(data_dir, 'Zurich.cherry_test')



rule likelihood_bd:
    '''
    Calculate likelihood value for estimated parameters.
    '''
    input:
        log = os.path.join(data_dir, '{tree}.p={p}.est_bd'),
        nwk = os.path.join(data_dir, '{tree}.nwk')
    output:
        lk=os.path.join(data_dir, '{tree}.p={p}.lk_bd'),
    params:
        mem=2000,
        name='lk_bd',
        qos='fast',
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.25"
    shell:
        """
        R=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $2 }}'`
        it=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $3 }}'`
        p=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $4 }}'`
        psi=`echo "print(1/${{it}})" | python3`
        la=`echo "print($R*${{psi}})" | python3`

        bd_loglikelihood --nwk {input.nwk} --la ${{la}} --psi ${{psi}} --p $p > {output.lk}
        """


rule likelihood_bdct:
    '''
    Calculate likelihood value for estimated parameters.
    '''
    input:
        log = os.path.join(data_dir, '{tree}.p={p}.est_bdct'),
        nwk = os.path.join(data_dir, '{tree}.nwk')
    output:
        lk=os.path.join(data_dir, '{tree}.p={p}.lk_bdct'),
    params:
        mem=2000,
        name='lk_bdct',
        qos='fast',
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.25"
    shell:
        """
        R=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $2 }}'`
        it=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $3 }}'`
        p=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $4 }}'`
        ups=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $5 }}'`
        rt=`head -n 2 {input.log} | tail -n 1 | awk -F',' '{{ print $6 }}'`
        psi=`echo "print(1/${{it}})" | python3`
        phi=`echo "print(1/${{rt}})" | python3`
        la=`echo "print($R*${{psi}})" | python3`

        bdct_loglikelihood --nwk {input.nwk} --la ${{la}} --psi ${{psi}} --p $p --upsilon ${{ups}} --phi ${{phi}} > {output.lk}
        """

rule estimate_params_p_fixed_bdct:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(data_dir, '{tree}.nwk')
    output:
        est = os.path.join(data_dir, '{tree}.p={p}.est_bdct')
    params:
        mem = 2000,
        name = 'est_p',
        qos = 'normal'
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.25"
    shell:
        """
        bdct_infer --p {wildcards.p}  --nwk {input.nwk} --log {output.est} --ci
        """

rule estimate_params_p_fixed_bd:
    '''
    Estimate parameters.
    '''
    input:
        nwk = os.path.join(data_dir, '{tree}.nwk')
    output:
        est = os.path.join(data_dir, '{tree}.p={p}.est_bd')
    params:
        mem = 2000,
        name = 'est_p',
        qos = 'fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.25"
    shell:
        """
        bd_infer --p {wildcards.p}  --nwk {input.nwk} --log {output.est} --ci
        """


rule cherry_test:
    '''
    CT-test on a given tree.
    '''
    input:
        nwk = os.path.join(data_dir, '{tree}.nwk')
    output:
        log = os.path.join(data_dir, '{tree}.cherry_test')
    params:
        mem=2000,
        name='ct_test',
        qos='fast'
    threads: 1
    singularity: "docker://evolbioinfo/bdct:v0.1.25"
    shell:
        """
        ct_test --nwk {input.nwk} --log {output.log}
        """

